%!PS-Adobe-2.0 EPSF-1.2%%Creator: Adobe Illustrator 88(TM) 1.5%%For: (Cynthia Smith) (SEGD)%%Title: (9b, Escalator \(down\) T)%%CreationDate: (5/5/92) (9:28 PM)%%DocumentProcSets: Adobe_packedarray 0 0%%DocumentSuppliedProcSets: Adobe_packedarray 0 0%%DocumentProcSets: Adobe_cmykcolor 0 0%%DocumentSuppliedProcSets: Adobe_cmykcolor 0 0%%DocumentProcSets: Adobe_cshow 0 0%%DocumentSuppliedProcSets: Adobe_cshow 0 0%%DocumentProcSets: Adobe_customcolor 0 0%%DocumentSuppliedProcSets: Adobe_customcolor 0 0%%DocumentProcSets: Adobe_Illustrator_881 0 0%%DocumentSuppliedProcSets: Adobe_Illustrator_881 0 0%%ColorUsage: Black&White%%DocumentProcessColors: Black%%BoundingBox:-116 -4 398 398%%TemplateBox:153 167 153 167%%TileBox:-687 527 -135 1257%%EndComments%%BeginProcSet: Adobe_packedarray 0 0% packedarray Operators% Version 1.0 5/9/1988% Copyright (C) 1987, 1988% Adobe Systems Incorporated% All Rights Reserveduserdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndProcSetAdobe_packedarray /initialize get exec%%BeginProcSet:Adobe_cmykcolor 0 0% cmykcolor Operators% Version 1.0 5/9/1988% Copyright (C) 1987, 1988% Adobe Systems Incorporated% All Rights Reservedcurrentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_cshow 0 0% cshow Operator% Version 1.0 5/9/1988% Copyright (C) 1987, 1988% Adobe Systems Incorporated% All Rights Reservedcurrentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% string proc cshow -{Adobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_customcolor 0 0% Custom Color Operators% Version 1.0 5/9/1988% Copyright (C) 1987, 1988% Adobe Systems Incorporated% All Rights Reservedcurrentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_Illustrator881 0 0% Adobe Illustrator (TM) Prolog% Version 1.0 5/9/1988% Copyright (C) 1987, 1988% Adobe Systems Incorporated% All Rights Reservedcurrentpacking true setpackinguserdict /Adobe_Illustrator881 72 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_Illustrator881_vars 29 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def% text operands/_a null def/_as null def/_tt 2 array def/_tl 2 array def/_tm matrix def/t {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_Illustrator881 beginAdobe_Illustrator881	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_Illustrator881 beginAdobe_Illustrator881_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_Illustrator881_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay length string sw x y{stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/ss					% ax ay length string matrix ss -{3 -1 roll pop4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} cshow3 npop} def% path operators/sp					% ax ay length string sp -{exch pop	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} cshow2 npop} def% path construction operators/pl					% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where{pop true setstrokeadjust/c				% x1 y1 x2 y2 x3 y3 c -{curveto} def/C/c load def/v				% x2 y2 x3 y3 v -{currentpoint 6 2 roll curveto} def/V/v load def/y				% x1 y1 x2 y2 y -{2 copy curveto} def/Y/y load def/l				% x y l -{lineto} def/L/l load def/m				% x y m -{moveto} def}{/c{pl curveto} def/C/c load def/v{currentpoint 6 2 roll pl curveto} def/V/v load def/y{pl 2 copy curveto} def/Y/y load def/l{pl lineto} def/L/l load def/m{pl moveto} def} ifelse% graphic state operators/d					% array phase d -{setdash} def/cf					% - cf flatnesscurrentflat def/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{newpath} def/n					% - n -/N load def/F					% - F -{_pf} def/f					% - f -{closepathF} def/S					% - S -{_ps} def/s					% - s -{closepathS} def/B					% - B -{gsave F grestoreS} def/b					% - b -{closepathB} def/W					% - W -{clip} def% text painting operators/ta					% length string ta ax ay length string{_as moveto_tt aload pop 4 -2 roll} def/tl					% - tl -{_tl aload pop translate} def/as					% - as array{{0 0}{2 copy _tt aload pop 4 -2 roll swexch neg 2 div exch neg 2 div}{2 copy _tt aload pop 4 -2 roll swexch neg exch neg}{0 0}} cvlit def/z					% literal size leading tracking align z -{/_a exch ddef/_as as _a get ddef_a 2 le	{	0 _tt astore pop	0 exch neg _tl astore pop	}	{	0 exch neg _tt astore pop	neg 0 _tl astore pop	} ifelseexch findfont exch scalefont setfont} def/tm					% matrix tm -{_tm currentmatrix popconcat} def/I					% matrix I -{tm/t	{	ta sp	tl	} ddef} def/o					% matrix o -{tm/t	{	ta 4 npop	tl	newpath	} ddef} def/e					% matrix e -{tm/t	{	ta _psf	tl	newpath	} ddef} def/r					% matrix r -{tm/t	{	ta _tm _pss	tl	newpath	} ddef} def/a					% matrix a -{tm/t	{	2 copy	ta _psf	newpath	ta _tm _pss	tl	newpath	} ddef} def/T					% - T -{_tm setmatrix} def% font operators/Z					% array literal literal direction Z -{popfindfont begincurrentdict dup length 1 add dict begin	{	1 index /FID ne		{		def		}		{		2 npop		} ifelse	} forall/FontName exch def dup length 0 ne	{	/Encoding Encoding 256 array copy def	0 exch		{		dup type /nametype eq			{			Encoding 2 index 2 index put pop			1 add			}			{			exch pop			} ifelse		} forall	} if popcurrentdict dup end end/FontName get exch definefont pop} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{gsave} def/Q					% - Q -{grestore} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def% locked object operators/A					% value A -{pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%EndProlog%%BeginSetupAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_Illustrator881 /initialize get exec%%EndSetup0 Auuuu0 O0 g0 R0 G0 i 0 J 0 j 0.238 w 10 M []0 d%%Note:101.959 328.823 m120.674 328.823 135.846 343.997 135.846 362.711 c135.846 381.428 120.674 396.6 101.959 396.6 c83.243 396.6 68.071 381.428 68.071 362.711 c68.071 343.997 83.243 328.823 101.959 328.823 cf101.959 362.711 mFUu0.958 w135.507 267.821 m135.507 289.174 L135.507 334.674 68.412 334.174 68.412 289.174 C68.412 202.065 L68.544 202.065 L5.151 138.674 L-0.828 132.695 -1.557 132.435 -13.299 132.435 C-13.309 132.425 -52.057 132.435 Y-91.057 132.435 -114.443 97.387 -114.443 67.674 c-114.443 37.961 -91.057 0.4 -48.598 0.4 C4.149 0.4 20.443 0.4 v36.738 0.4 56.491 6.629 72.786 21.965 c274.923 223.491 L279.237 227.325 281.633 228.522 289.062 228.522 c316.929 228.522 338.975 228.522 v363 228.522 397 255.75 397 295 c397 333.849 362.75 359.75 337 359.836 C258.193 359.836 L241.899 359.836 220.943 353.174 208.443 340.674 C135.505 267.821 L135.507 267.821 LfUUu190.718 -2.725 m261.511 -2.725 L281.011 -2.725 281.761 27.275 261.511 27.275 C225.224 27.275 l294.236 96.287 L309.535 111.587 287.897 133.725 271.643 117.472 C203.658 49.299 l203.658 85.215 L203.761 104.715 173.511 105.465 173.465 85.215 C173.465 14.861 L173.465 4.361 180.511 -2.725 190.718 -2.725 CfUUu1 g0.238 w262.986 326.289 m333.891 326.289 L351.144 326.289 362.75 307.002 362.75 295.5 c362.75 283.998 354.516 262.531 333.429 262.531 C290.8 262.531 L272.75 262.531 264.75 260 254.359 249.609 C50.679 45.929 L42.443 37.674 31.989 34.407 18.57 34.407 C-48.598 34.407 L-65.851 34.407 -81.057 49.004 -81.057 68.174 c-81.057 87.344 -66.557 98.085 -51.557 98.085 C-5.476 98.085 L7.943 98.085 16.775 101.919 24.443 109.587 C231.561 316.704 L240.083 325.224 248.502 326.289 262.986 326.289 CfUU%%TrailerAdobe_Illustrator881 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get exec